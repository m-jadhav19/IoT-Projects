#include <IRLibSendBase.h>   
#include <IRLib_HashRaw.h>    
IRsendRaw mySender;

int pir = 9;
int i;
const int dt = 150;
int PIR;


void setup()
  {
  pinMode(pir,INPUT);
  Serial.begin(9600);
  delay(2000);
  while (!Serial);
  Serial.println("DHT11 Humidity & temperature Sensor\n\n");
  }

#define RAW_DATA_LEN 407
uint16_t rawDataOff[RAW_DATA_LEN] = 
  {
  5036, 2218, 282, 1834, 310, 790, 282, 760, 310, 760, 312, 1862, 282, 790, 280, 790, 282, 790, 282, 788, 282, 1862, 282, 792, 280, 1862, 282, 1862, 282, 790, 282, 1862, 282, 1860, 282, 1832, 312, 1832, 312, 1834, 310, 790, 280, 1832, 312, 790, 282, 788, 282, 758, 312, 792, 280, 788, 282, 790, 282, 1862, 282, 790, 282, 788, 282, 1862, 282, 790, 282, 790, 282, 788, 282, 1862, 282, 790, 282, 760, 312, 788, 284, 758, 312, 760, 312, 760, 312, 790, 282, 790, 282, 788, 282, 762, 310, 788, 282, 760, 314, 788, 282, 790, 282, 1862, 282, 1832, 312, 1828, 314, 762, 310, 760, 310, 1834, 312, 788, 282, 29388, 4932, 2216, 284, 1860, 284, 788, 284, 760, 312, 758, 312, 1832, 312, 760, 314, 758, 314, 790, 280, 760, 312, 1862, 282, 760, 312, 1830, 312, 1836, 308, 790, 282, 1862, 282, 1862, 282, 1834, 310, 1860, 282, 1832, 312, 758, 314, 1862, 282, 758, 314, 760, 312, 790, 282, 758, 314, 756, 314, 758, 312, 1832, 312, 760, 312, 758, 314, 1862, 282, 760, 312, 788, 284, 788, 282, 760, 312, 758, 314, 760, 312, 760, 312, 758, 314, 758, 312, 1832, 314, 1830, 314, 758, 314, 760, 312, 760, 312, 1830, 314, 1860, 282, 760, 310, 760, 312, 760, 312, 758, 312, 760, 312, 760, 312, 758, 316, 758, 312, 758, 314, 758, 312, 758, 314, 760, 310, 758, 314, 788, 282, 758, 314, 758, 312, 760, 312, 758, 312, 762, 312, 760, 312, 758, 312, 758, 312, 760, 310, 790, 282, 760, 312, 758, 314, 788, 280, 762, 312, 760, 310, 760, 312, 760, 310, 758, 312, 760, 312, 758, 312, 760, 312, 758, 312, 758, 290, 814, 258, 784, 312, 760, 310, 760, 312, 758, 290, 782, 290, 784, 310, 758, 314, 1832, 290, 784, 312, 758, 314, 758, 312, 760, 312, 760, 288, 780, 290, 780, 290, 784, 288, 782, 314, 758, 290, 780, 290, 784, 288, 784, 288, 782, 288, 782, 290, 782, 290, 782, 290, 780, 290, 784, 288, 784, 288, 782, 288, 782, 288, 784, 288, 782, 290, 782, 290, 782, 290, 782, 290, 784, 288, 784, 290, 780, 290, 782, 288, 784, 288, 782, 290, 780, 290, 782, 290, 784, 288, 784, 288, 784, 288, 782, 290, 782, 290, 782, 290, 782, 288, 782, 288, 1856, 288, 784, 288, 1856, 288, 1854, 288, 1856, 288, 1856, 288, 782, 290, 1854, 290
  };

#define RAW_DATA_LEN 407
uint16_t rawDataOn[RAW_DATA_LEN] =
  {
  4852, 2298, 202, 1942, 202, 870, 200, 870, 202, 868, 202, 1942, 202, 870, 202, 870, 202, 870, 202, 870, 202, 1942, 202, 870, 202, 1942, 202, 1942, 202, 868, 202, 1942, 202, 1942, 202, 1912, 232, 1942, 202, 1942, 202, 868, 202, 1942, 202, 870, 202, 870, 202, 868, 202, 868, 204, 868, 202, 870, 202, 1942, 202, 868, 204, 868, 202, 1942, 202, 870, 202, 870, 200, 870, 202, 1942, 202, 868, 202, 870, 202, 870, 202, 870, 202, 870, 202, 870, 202, 870, 202, 870, 202, 868, 202, 868, 204, 868, 202, 870, 202, 870, 202, 870, 202, 1942, 202, 1942, 202, 1942, 202, 868, 202, 868, 204, 1942, 202, 870, 202, 29468, 4880, 2266, 256, 1888, 230, 844, 202, 868, 202, 870, 256, 1888, 230, 842, 228, 842, 230, 842, 256, 814, 232, 1914, 254, 816, 230, 1916, 256, 1888, 256, 814, 256, 1890, 254, 1888, 256, 1888, 256, 1888, 256, 1888, 256, 816, 230, 1912, 258, 814, 256, 816, 256, 816, 282, 790, 280, 790, 282, 790, 282, 1862, 258, 814, 280, 790, 282, 1862, 280, 792, 280, 790, 282, 788, 282, 790, 282, 790, 282, 790, 282, 790, 282, 788, 282, 790, 282, 1862, 282, 1862, 282, 790, 282, 788, 282, 1862, 282, 1864, 280, 1862, 282, 790, 280, 790, 282, 790, 282, 790, 282, 788, 284, 790, 282, 760, 310, 790, 282, 788, 282, 1862, 282, 788, 282, 790, 282, 788, 282, 788, 282, 1862, 284, 788, 282, 788, 284, 788, 282, 790, 282, 788, 284, 788, 282, 790, 282, 788, 284, 758, 312, 788, 284, 788, 282, 788, 284, 788, 282, 788, 284, 788, 282, 788, 284, 788, 284, 758, 314, 786, 284, 788, 284, 1860, 282, 790, 282, 790, 282, 1862, 282, 758, 312, 762, 310, 788, 284, 788, 282, 758, 314, 758, 314, 1862, 282, 760, 312, 1860, 284, 760, 310, 788, 282, 760, 312, 788, 284, 760, 312, 788, 282, 790, 282, 788, 284, 788, 282, 790, 282, 788, 282, 758, 314, 788, 282, 758, 314, 1862, 282, 758, 312, 788, 284, 758, 312, 758, 314, 788, 282, 758, 314, 758, 312, 788, 284, 788, 284, 758, 312, 760, 312, 762, 310, 790, 284, 788, 282, 758, 314, 758, 312, 788, 282, 760, 312, 760, 312, 760, 312, 788, 282, 758, 314, 788, 284, 788, 284, 758, 312, 788, 282, 790, 282, 1832, 310, 758, 316, 788, 284, 1862, 282, 1862, 282, 1832, 310, 788, 284
  };

void loop()
  {
  delay (2000);
  PIR = digitalRead(pir);
  Serial.println(PIR);
  if (PIR == 1)
    {
    mySender.send(rawDataOn, RAW_DATA_LEN, 36);
    Serial.println(F("AC Switched On"));
    delay(3000);
    mySender.send(rawDataOn, RAW_DATA_LEN, 36);
    for (i=0;i<dt;i++)
      {
      delay(2000);
      PIR = digitalRead(pir);
      if (PIR == 1)
        {
        i=0;
        }
      }
    }
  else if (PIR == 0)
    {
    mySender.send(rawDataOff, RAW_DATA_LEN, 36);
    Serial.println(F("AC Switched Off"));
    delay(3000);
    mySender.send(rawDataOff, RAW_DATA_LEN, 36);
    while (PIR == 0)
      {
      PIR = digitalRead(pir);
      }
    }
  }
